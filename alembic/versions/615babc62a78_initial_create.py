"""initial create

Revision ID: 615babc62a78
Revises: 
Create Date: 2025-05-19 13:33:17.791088

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '615babc62a78'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefit',
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('typ', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefit_id'), 'benefit', ['id'], unique=False)
    op.create_table('conditions',
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('typ', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conditions_id'), 'conditions', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('conditional_offer',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.Column('benifit_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['benifit_id'], ['benefit.id'], ),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_conditional_offer_id'), 'conditional_offer', ['id'], unique=False)
    op.create_table('products_condition_off_m2m_link',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('conditional_offer_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['conditional_offer_id'], ['conditional_offer.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_condition_off_m2m_link_id'), 'products_condition_off_m2m_link', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_products_condition_off_m2m_link_id'), table_name='products_condition_off_m2m_link')
    op.drop_table('products_condition_off_m2m_link')
    op.drop_index(op.f('ix_conditional_offer_id'), table_name='conditional_offer')
    op.drop_table('conditional_offer')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_conditions_id'), table_name='conditions')
    op.drop_table('conditions')
    op.drop_index(op.f('ix_benefit_id'), table_name='benefit')
    op.drop_table('benefit')
    # ### end Alembic commands ###
